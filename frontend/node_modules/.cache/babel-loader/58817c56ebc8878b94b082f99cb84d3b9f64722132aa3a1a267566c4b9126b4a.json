{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// API methods\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/api/health'),\n  // Prospects\n  getProspects: (skip = 0, limit = 100) => api.get(`/api/prospects?skip=${skip}&limit=${limit}`),\n  createProspect: prospect => api.post('/api/prospects', prospect),\n  uploadProspects: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/prospects/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Templates\n  getTemplates: () => api.get('/api/templates'),\n  createTemplate: template => api.post('/api/templates', template),\n  getTemplate: id => api.get(`/api/templates/${id}`),\n  updateTemplate: (id, template) => api.put(`/api/templates/${id}`, template),\n  // Campaigns\n  getCampaigns: () => api.get('/api/campaigns'),\n  createCampaign: campaign => api.post('/api/campaigns', campaign),\n  getCampaign: id => api.get(`/api/campaigns/${id}`),\n  sendCampaign: id => api.post(`/api/campaigns/${id}/send`),\n  // Intents\n  getIntents: () => api.get('/api/intents'),\n  createIntent: intent => api.post('/api/intents', intent),\n  // Analytics\n  getCampaignAnalytics: campaignId => api.get(`/api/analytics/campaign/${campaignId}`),\n  // Prospect Lists\n  getLists: () => api.get('/api/lists'),\n  createList: list => api.post('/api/lists', list),\n  getList: id => api.get(`/api/lists/${id}`),\n  updateList: (id, list) => api.put(`/api/lists/${id}`, list),\n  deleteList: id => api.delete(`/api/lists/${id}`),\n  addProspectsToList: (listId, prospectIds) => api.post(`/api/lists/${listId}/prospects`, prospectIds),\n  removeProspectsFromList: (listId, prospectIds) => api.delete(`/api/lists/${listId}/prospects`, {\n    data: prospectIds\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","apiService","healthCheck","get","getProspects","skip","limit","createProspect","prospect","post","uploadProspects","file","formData","FormData","append","getTemplates","createTemplate","template","getTemplate","id","updateTemplate","put","getCampaigns","createCampaign","campaign","getCampaign","sendCampaign","getIntents","createIntent","intent","getCampaignAnalytics","campaignId","getLists","createList","list","getList","updateList","deleteList","delete","addProspectsToList","listId","prospectIds","removeProspectsFromList"],"sources":["/app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// API methods\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/api/health'),\n\n  // Prospects\n  getProspects: (skip = 0, limit = 100) => \n    api.get(`/api/prospects?skip=${skip}&limit=${limit}`),\n  createProspect: (prospect) => api.post('/api/prospects', prospect),\n  uploadProspects: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/prospects/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  // Templates\n  getTemplates: () => api.get('/api/templates'),\n  createTemplate: (template) => api.post('/api/templates', template),\n  getTemplate: (id) => api.get(`/api/templates/${id}`),\n  updateTemplate: (id, template) => api.put(`/api/templates/${id}`, template),\n\n  // Campaigns\n  getCampaigns: () => api.get('/api/campaigns'),\n  createCampaign: (campaign) => api.post('/api/campaigns', campaign),\n  getCampaign: (id) => api.get(`/api/campaigns/${id}`),\n  sendCampaign: (id) => api.post(`/api/campaigns/${id}/send`),\n\n  // Intents\n  getIntents: () => api.get('/api/intents'),\n  createIntent: (intent) => api.post('/api/intents', intent),\n\n  // Analytics\n  getCampaignAnalytics: (campaignId) => api.get(`/api/analytics/campaign/${campaignId}`),\n\n  // Prospect Lists\n  getLists: () => api.get('/api/lists'),\n  createList: (list) => api.post('/api/lists', list),\n  getList: (id) => api.get(`/api/lists/${id}`),\n  updateList: (id, list) => api.put(`/api/lists/${id}`, list),\n  deleteList: (id) => api.delete(`/api/lists/${id}`),\n  addProspectsToList: (listId, prospectIds) => api.post(`/api/lists/${listId}/prospects`, prospectIds),\n  removeProspectsFromList: (listId, prospectIds) => api.delete(`/api/lists/${listId}/prospects`, { data: prospectIds }),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}